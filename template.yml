# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Infrastructure Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  searchphotos:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Description: ''
      MemorySize: 128
      Timeout: 4
      Handler: lambda_function.lambda_handler
      Runtime: python3.13
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - !Ref Layer1
        - !Ref Layer2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-east-1:739275456688:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-east-1:739275456688:log-group:/aws/lambda/search-photos:*
            - Effect: Allow
              Action:
                - apigateway:*
              Resource: arn:aws:apigateway:*::/*
            - Effect: Allow
              Action:
                - '*'
              Resource: '*'
            - Sid: AmazonLexFullAccessStatement1
              Effect: Allow
              Action:
                - cloudwatch:GetMetricStatistics
                - cloudwatch:DescribeAlarms
                - cloudwatch:DescribeAlarmsForMetric
                - kms:DescribeKey
                - kms:ListAliases
                - lambda:GetPolicy
                - lambda:ListFunctions
                - lex:*
                - polly:DescribeVoices
                - polly:SynthesizeSpeech
                - kendra:ListIndices
                - iam:ListRoles
                - s3:ListAllMyBuckets
                - logs:DescribeLogGroups
                - s3:GetBucketLocation
              Resource:
                - '*'
            - Sid: AmazonLexFullAccessStatement2
              Effect: Allow
              Action:
                - lambda:AddPermission
                - lambda:RemovePermission
              Resource: arn:aws:lambda:*:*:function:AmazonLex*
              Condition:
                StringEquals:
                  lambda:Principal: lex.amazonaws.com
            - Sid: AmazonLexFullAccessStatement3
              Effect: Allow
              Action:
                - iam:GetRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
                - >-
                  arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*
            - Sid: AmazonLexFullAccessStatement4
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
              Condition:
                StringEquals:
                  iam:AWSServiceName: lex.amazonaws.com
            - Sid: AmazonLexFullAccessStatement5
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
              Condition:
                StringEquals:
                  iam:AWSServiceName: channels.lex.amazonaws.com
            - Sid: AmazonLexFullAccessStatement6
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
              Condition:
                StringEquals:
                  iam:AWSServiceName: lexv2.amazonaws.com
            - Sid: AmazonLexFullAccessStatement7
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
              Condition:
                StringEquals:
                  iam:AWSServiceName: channels.lexv2.amazonaws.com
            - Sid: AmazonLexFullAccessStatement8
              Effect: Allow
              Action:
                - iam:CreateServiceLinkedRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*
              Condition:
                StringEquals:
                  iam:AWSServiceName: replication.lexv2.amazonaws.com
            - Sid: AmazonLexFullAccessStatement9
              Effect: Allow
              Action:
                - iam:DeleteServiceLinkedRole
                - iam:GetServiceLinkedRoleDeletionStatus
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
                - >-
                  arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*
            - Sid: AmazonLexFullAccessStatement10
              Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - lex.amazonaws.com
            - Sid: AmazonLexFullAccessStatement11
              Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - lexv2.amazonaws.com
            - Sid: AmazonLexFullAccessStatement12
              Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - channels.lexv2.amazonaws.com
            - Sid: AmazonLexFullAccessStatement13
              Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - >-
                  arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*
              Condition:
                StringEquals:
                  iam:PassedToService:
                    - lexv2.amazonaws.com
            - Effect: Allow
              Action:
                - es:*
              Resource: '*'
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /search
            Method: GET
        Api2:
          Type: Api
          Properties:
            Path: /search
            Method: GET
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  # This resource represents your Layer with name opensearchlayer. To download
# the content of your Layer, go to
# 
# aws.amazon.com/go/view?arn=arn%3Aaws%3Alambda%3Aus-east-1%3A739275456688%3Alayer%3Aopensearchlayer%3A2&source=lambda
  Layer1:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./opensearchlayer
      LayerName: opensearchlayer
      CompatibleRuntimes:
        - python3.13
  # This resource represents your Layer with name aws4authlayer. To download the
# content of your Layer, go to
# 
# aws.amazon.com/go/view?arn=arn%3Aaws%3Alambda%3Aus-east-1%3A739275456688%3Alayer%3Aaws4authlayer%3A2&source=lambda
  Layer2:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./aws4authlayer
      LayerName: aws4authlayer
      CompatibleRuntimes:
        - python3.13
